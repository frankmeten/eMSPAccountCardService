name: Build and Deploy to AWS EKS

on:
  push:
    branches: [main, dev]

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: emsp-account-card-service
  EKS_CLUSTER_NAME: emsp-cluster
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      JDBC_DATABASE_URL: jdbc:postgresql://localhost:5432/emsp
      JDBC_DATABASE_USERNAME: emspuser
      JDBC_DATABASE_PASSWORD: emsppass

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: emspuser
          POSTGRES_PASSWORD: emsppass
          POSTGRES_DB: emsp
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      - name: Set image tag in deployment-eks.yaml
        run: |
          sed -i "s|IMAGE_PLACEHOLDER|${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s/deployment-eks.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment-eks.yaml
          kubectl apply -f k8s/service-eks.yaml