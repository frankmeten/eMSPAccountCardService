name: Build and Deploy to AKS

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  IMAGE_NAME: emsp-account-card-service

jobs:

  build-deploy:
    runs-on: ubuntu-latest

    env:
      JDBC_DATABASE_URL: jdbc:postgresql://localhost:5432/emsp
      JDBC_DATABASE_USERNAME: emspuser
      JDBC_DATABASE_PASSWORD: emsppass

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: emspuser
          POSTGRES_PASSWORD: emsppass
          POSTGRES_DB: emsp
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn -B package --file pom.xml
    
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:latest .
          docker push $REGISTRY/$IMAGE_NAME:latest

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/deployment-azure.yaml
          kubectl apply -f k8s/service-azure.yaml